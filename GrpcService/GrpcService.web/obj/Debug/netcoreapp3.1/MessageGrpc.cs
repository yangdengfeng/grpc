// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService.Web.Protos {
  public static partial class EmployeeService
  {
    static readonly string __ServiceName = "EmployeeService";

    static readonly grpc::Marshaller<global::GrpcService.Web.Protos.GetByNoRequest> __Marshaller_GetByNoRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Web.Protos.GetByNoRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Web.Protos.EmployeeResponse> __Marshaller_EmployeeResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Web.Protos.EmployeeResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Web.Protos.GetAllRequest> __Marshaller_GetAllRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Web.Protos.GetAllRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Web.Protos.AddPhotoRequest> __Marshaller_AddPhotoRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Web.Protos.AddPhotoRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Web.Protos.AddPhotoResponse> __Marshaller_AddPhotoResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Web.Protos.AddPhotoResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Web.Protos.EmployeeRequest> __Marshaller_EmployeeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Web.Protos.EmployeeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Web.Protos.TokenRequest> __Marshaller_TokenRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Web.Protos.TokenRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Web.Protos.TokenResponse> __Marshaller_TokenResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Web.Protos.TokenResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcService.Web.Protos.GetByNoRequest, global::GrpcService.Web.Protos.EmployeeResponse> __Method_GetByNo = new grpc::Method<global::GrpcService.Web.Protos.GetByNoRequest, global::GrpcService.Web.Protos.EmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByNo",
        __Marshaller_GetByNoRequest,
        __Marshaller_EmployeeResponse);

    static readonly grpc::Method<global::GrpcService.Web.Protos.GetAllRequest, global::GrpcService.Web.Protos.EmployeeResponse> __Method_GetAll = new grpc::Method<global::GrpcService.Web.Protos.GetAllRequest, global::GrpcService.Web.Protos.EmployeeResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAll",
        __Marshaller_GetAllRequest,
        __Marshaller_EmployeeResponse);

    static readonly grpc::Method<global::GrpcService.Web.Protos.AddPhotoRequest, global::GrpcService.Web.Protos.AddPhotoResponse> __Method_AddPhoto = new grpc::Method<global::GrpcService.Web.Protos.AddPhotoRequest, global::GrpcService.Web.Protos.AddPhotoResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "AddPhoto",
        __Marshaller_AddPhotoRequest,
        __Marshaller_AddPhotoResponse);

    static readonly grpc::Method<global::GrpcService.Web.Protos.EmployeeRequest, global::GrpcService.Web.Protos.EmployeeResponse> __Method_Save = new grpc::Method<global::GrpcService.Web.Protos.EmployeeRequest, global::GrpcService.Web.Protos.EmployeeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Save",
        __Marshaller_EmployeeRequest,
        __Marshaller_EmployeeResponse);

    static readonly grpc::Method<global::GrpcService.Web.Protos.EmployeeRequest, global::GrpcService.Web.Protos.EmployeeResponse> __Method_SaveAll = new grpc::Method<global::GrpcService.Web.Protos.EmployeeRequest, global::GrpcService.Web.Protos.EmployeeResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "SaveAll",
        __Marshaller_EmployeeRequest,
        __Marshaller_EmployeeResponse);

    static readonly grpc::Method<global::GrpcService.Web.Protos.TokenRequest, global::GrpcService.Web.Protos.TokenResponse> __Method_CreateToken = new grpc::Method<global::GrpcService.Web.Protos.TokenRequest, global::GrpcService.Web.Protos.TokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateToken",
        __Marshaller_TokenRequest,
        __Marshaller_TokenResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.Web.Protos.MessageReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EmployeeService</summary>
    [grpc::BindServiceMethod(typeof(EmployeeService), "BindService")]
    public abstract partial class EmployeeServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Web.Protos.EmployeeResponse> GetByNo(global::GrpcService.Web.Protos.GetByNoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetAll(global::GrpcService.Web.Protos.GetAllRequest request, grpc::IServerStreamWriter<global::GrpcService.Web.Protos.EmployeeResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Web.Protos.AddPhotoResponse> AddPhoto(grpc::IAsyncStreamReader<global::GrpcService.Web.Protos.AddPhotoRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Web.Protos.EmployeeResponse> Save(global::GrpcService.Web.Protos.EmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task SaveAll(grpc::IAsyncStreamReader<global::GrpcService.Web.Protos.EmployeeRequest> requestStream, grpc::IServerStreamWriter<global::GrpcService.Web.Protos.EmployeeResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Web.Protos.TokenResponse> CreateToken(global::GrpcService.Web.Protos.TokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(EmployeeServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetByNo, serviceImpl.GetByNo)
          .AddMethod(__Method_GetAll, serviceImpl.GetAll)
          .AddMethod(__Method_AddPhoto, serviceImpl.AddPhoto)
          .AddMethod(__Method_Save, serviceImpl.Save)
          .AddMethod(__Method_SaveAll, serviceImpl.SaveAll)
          .AddMethod(__Method_CreateToken, serviceImpl.CreateToken).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EmployeeServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetByNo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Web.Protos.GetByNoRequest, global::GrpcService.Web.Protos.EmployeeResponse>(serviceImpl.GetByNo));
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcService.Web.Protos.GetAllRequest, global::GrpcService.Web.Protos.EmployeeResponse>(serviceImpl.GetAll));
      serviceBinder.AddMethod(__Method_AddPhoto, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::GrpcService.Web.Protos.AddPhotoRequest, global::GrpcService.Web.Protos.AddPhotoResponse>(serviceImpl.AddPhoto));
      serviceBinder.AddMethod(__Method_Save, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Web.Protos.EmployeeRequest, global::GrpcService.Web.Protos.EmployeeResponse>(serviceImpl.Save));
      serviceBinder.AddMethod(__Method_SaveAll, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::GrpcService.Web.Protos.EmployeeRequest, global::GrpcService.Web.Protos.EmployeeResponse>(serviceImpl.SaveAll));
      serviceBinder.AddMethod(__Method_CreateToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Web.Protos.TokenRequest, global::GrpcService.Web.Protos.TokenResponse>(serviceImpl.CreateToken));
    }

  }
}
#endregion
